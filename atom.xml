<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Htxf-fxtH</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-10-30T08:27:35.222Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>htxf</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android还踢球app总结（一）</title>
    <link href="http://yoursite.com/2016/10/30/Android%E8%BF%98%E8%B8%A2%E7%90%83app%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2016/10/30/Android还踢球app总结（一）/</id>
    <published>2016-10-30T08:27:03.000Z</published>
    <updated>2016-10-30T08:27:35.222Z</updated>
    
    <content type="html"><![CDATA[<p>这个小项目做完快半年多了，一直想总结一下，记录一些想法和技能。大概分五篇完成，第一篇介绍目标人群、需求分析还有功能介绍；第二篇介绍界面设计及简单的代码实现；第三篇介绍”开发模式“；第四篇介绍用到的第三方服务；第五篇介绍一些小的功能点和知识点。</p>
<h2 id="1-目标人群"><a href="#1-目标人群" class="headerlink" title="1.目标人群"></a>1.目标人群</h2><p>当然是广大的足球爱好者，是真正想下场踢球的足球爱好者。</p>
<p>稍微扯点别的，为什么取“还踢球”这个名字？现在中国足球很让人失望（貌似从自己真正看球时就一直让人失望，除了之前高洪波带着打韩国、德国、法国那几场……），但真正爱球的人谁不希望他变得更好呢，再差也想看，想着能变得好一点。“还踢球”是星爷《功夫》里的一句台词，一群小孩在踢球，球被踢到星爷这边，然后近景是星爷的腿，远处一群小孩，两栋破楼，星爷来了一段freestyle，很帅，小孩问：“叔叔，可不可教我们踢球啊？”。没想到星爷回的是：”还踢球？！“，然后一脚把球踩“泄”了。这应该能够表达很多人对中国足球的感受了……但真要这样的话，中国足球是不可能有出头之日了。有时候有中国队的比赛，周围不看球的人总会说“啊，中国队连XX都踢不过啊”，“不用看了，肯定输了”，稍微瞥一眼直播，“这都停不住”，“这配合也太烂了吧”……诸如此类，网上的喷子更不用说了。很心烦，但感觉说什么都没用。我们能做得是真的去踢踢球，然后能够慢慢影响周围的人觉得说踢好球真不是件容易的事，而又是一件令人激动、令人开心的事。</p>
<h2 id="2-需求分析"><a href="#2-需求分析" class="headerlink" title="2.需求分析"></a>2.需求分析</h2><p>真的开发一款软件时，需求分析很重要的。但没有亲身经历过，只是看过课本上的讲的。出一份需求分析文档更麻烦了。这里的需求分析都是自己凭空想的，起码自己曾经也算个足球“超级狂der”爱好者吧。文档里主要有写可行性分析和功能需求（用用例图和用例描述进行介绍）。</p>
<p>自己想要做这一款app时主要是由于自己需求。想踢球时不知道谁有空，在哪里可以踢，尤其是刚到一个新的城市时。虽然踢一次，大家可以留联系方式，但其实不可能与所有踢球的朋友联系上。所以我最想要的功能是可以发布一些约球的信息，填写时间、地点、几人制的，大家可以报名，人多了，去了也可以分拨。然后按照约球的时间排序，大家也可以浏览什么时间什么地点有球踢，可以选择的去参加。这个功能其实就类似一个论坛，能够发帖、浏览帖子。</p>
<a id="more"></a>
<h2 id="3-功能介绍"><a href="#3-功能介绍" class="headerlink" title="3.功能介绍"></a>3.功能介绍</h2><p>最后介绍下预想一些的功能。</p>
<ul>
<li>找组织<ul>
<li>发帖</li>
<li>浏览帖子</li>
<li>查看详情 <ul>
<li>查看帖子详情</li>
<li>查看约球当天天气详情</li>
<li>查看约球地点地图详情</li>
</ul>
</li>
<li>报名参加</li>
<li>目的地导航</li>
</ul>
</li>
<li>找场地 <ul>
<li>浏览场地</li>
<li>查看详情</li>
<li>目的地导航</li>
<li>评价场地</li>
</ul>
</li>
<li>本地比赛<ul>
<li>查看比赛</li>
<li>查看球队</li>
<li>查看选手</li>
</ul>
</li>
</ul>
<p>目前主要实现了找组织功能模块。当然还有用户管理模块。</p>
<p>一些说明：</p>
<p>找组织功能中，天气的获取想用<a href="http://www.heweather.com/" target="_blank" rel="external">和风天气</a>的API，而天气一般都是7天之内的，所以关于约球的时间也得限制在7天之内；关于约球帖子的信息，必须要有时间和地点。刚开始想的地点只是文字描述，然而这显然是不够精确。所以关于地点的选择用了<a href="http://lbs.amap.com/" target="_blank" rel="external">高德</a>的API，每次都在地图上选择，可以获取经纬度，保存，展示地点时又可根据经纬度确定在地图上的位置。关于用户、帖子的管理用到了<a href="http://www.bmob.cn/" target="_blank" rel="external">Bmob</a>，是一种<a href="https://en.wikipedia.org/wiki/Mobile_backend_as_a_service" target="_blank" rel="external">MBaaS</a>服务。这些之后再详细介绍。</p>
<p>找场地功能中，场地可以是一些商家提供，也可以是确定能踢球的一些学校或者广场之类的地方。（需人工确定、不断更新）可以看场地的一些实拍图，还有球友的评价。</p>
<p>本地比赛功能中，可以发布本地球友们组织的赛事，比如关于招募球队报名、赛事进程等等。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个小项目做完快半年多了，一直想总结一下，记录一些想法和技能。大概分五篇完成，第一篇介绍目标人群、需求分析还有功能介绍；第二篇介绍界面设计及简单的代码实现；第三篇介绍”开发模式“；第四篇介绍用到的第三方服务；第五篇介绍一些小的功能点和知识点。&lt;/p&gt;
&lt;h2 id=&quot;1-目标人群&quot;&gt;&lt;a href=&quot;#1-目标人群&quot; class=&quot;headerlink&quot; title=&quot;1.目标人群&quot;&gt;&lt;/a&gt;1.目标人群&lt;/h2&gt;&lt;p&gt;当然是广大的足球爱好者，是真正想下场踢球的足球爱好者。&lt;/p&gt;
&lt;p&gt;稍微扯点别的，为什么取“还踢球”这个名字？现在中国足球很让人失望（貌似从自己真正看球时就一直让人失望，除了之前高洪波带着打韩国、德国、法国那几场……），但真正爱球的人谁不希望他变得更好呢，再差也想看，想着能变得好一点。“还踢球”是星爷《功夫》里的一句台词，一群小孩在踢球，球被踢到星爷这边，然后近景是星爷的腿，远处一群小孩，两栋破楼，星爷来了一段freestyle，很帅，小孩问：“叔叔，可不可教我们踢球啊？”。没想到星爷回的是：”还踢球？！“，然后一脚把球踩“泄”了。这应该能够表达很多人对中国足球的感受了……但真要这样的话，中国足球是不可能有出头之日了。有时候有中国队的比赛，周围不看球的人总会说“啊，中国队连XX都踢不过啊”，“不用看了，肯定输了”，稍微瞥一眼直播，“这都停不住”，“这配合也太烂了吧”……诸如此类，网上的喷子更不用说了。很心烦，但感觉说什么都没用。我们能做得是真的去踢踢球，然后能够慢慢影响周围的人觉得说踢好球真不是件容易的事，而又是一件令人激动、令人开心的事。&lt;/p&gt;
&lt;h2 id=&quot;2-需求分析&quot;&gt;&lt;a href=&quot;#2-需求分析&quot; class=&quot;headerlink&quot; title=&quot;2.需求分析&quot;&gt;&lt;/a&gt;2.需求分析&lt;/h2&gt;&lt;p&gt;真的开发一款软件时，需求分析很重要的。但没有亲身经历过，只是看过课本上的讲的。出一份需求分析文档更麻烦了。这里的需求分析都是自己凭空想的，起码自己曾经也算个足球“超级狂der”爱好者吧。文档里主要有写可行性分析和功能需求（用用例图和用例描述进行介绍）。&lt;/p&gt;
&lt;p&gt;自己想要做这一款app时主要是由于自己需求。想踢球时不知道谁有空，在哪里可以踢，尤其是刚到一个新的城市时。虽然踢一次，大家可以留联系方式，但其实不可能与所有踢球的朋友联系上。所以我最想要的功能是可以发布一些约球的信息，填写时间、地点、几人制的，大家可以报名，人多了，去了也可以分拨。然后按照约球的时间排序，大家也可以浏览什么时间什么地点有球踢，可以选择的去参加。这个功能其实就类似一个论坛，能够发帖、浏览帖子。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>不同电脑上test2</title>
    <link href="http://yoursite.com/2016/10/29/%E4%B8%8D%E5%90%8C%E7%94%B5%E8%84%91%E4%B8%8Atest2/"/>
    <id>http://yoursite.com/2016/10/29/不同电脑上test2/</id>
    <published>2016-10-29T11:27:52.000Z</published>
    <updated>2016-10-29T11:31:32.332Z</updated>
    
    <content type="html"><![CDATA[<p>不同电脑上test2 来自笔记本</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不同电脑上test2 来自笔记本&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>不同电脑同步test</title>
    <link href="http://yoursite.com/2016/10/29/%E4%B8%8D%E5%90%8C%E7%94%B5%E8%84%91%E5%90%8C%E6%AD%A5test/"/>
    <id>http://yoursite.com/2016/10/29/不同电脑同步test/</id>
    <published>2016-10-29T10:07:23.000Z</published>
    <updated>2016-10-29T10:08:18.821Z</updated>
    
    <content type="html"><![CDATA[<p>不同电脑同步test. 来自实验室</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不同电脑同步test. 来自实验室&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Test Again</title>
    <link href="http://yoursite.com/2016/10/29/Test-Again/"/>
    <id>http://yoursite.com/2016/10/29/Test-Again/</id>
    <published>2016-10-29T09:29:11.000Z</published>
    <updated>2016-10-29T09:58:33.470Z</updated>
    
    <content type="html"><![CDATA[<p>重装电脑 test again</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;重装电脑 test again&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JS高程（一）</title>
    <link href="http://yoursite.com/2016/10/26/JS%E9%AB%98%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2016/10/26/JS高程（一）/</id>
    <published>2016-10-26T13:24:23.000Z</published>
    <updated>2016-10-29T12:12:39.390Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第1章-简介"><a href="#第1章-简介" class="headerlink" title="第1章 简介"></a>第1章 简介</h2><h3 id="1-几个人东"><a href="#1-几个人东" class="headerlink" title="1. 几个人东"></a>1. 几个人东</h3><ul>
<li>布兰登 艾奇 (Brendan Eich)</li>
<li>ECMA(European Computer Manufactures Association) 欧洲计算机制造商协会</li>
<li>ISO/IEC(International Organization for Standardization and International Electrotechnical Commission) 国际标准化组织和国际电工委员会</li>
</ul>
<h3 id="2-JavaScript-ECMAScript-DOM-BOM"><a href="#2-JavaScript-ECMAScript-DOM-BOM" class="headerlink" title="2. JavaScript = ECMAScript + DOM + BOM"></a>2. JavaScript = ECMAScript + DOM + BOM</h3><ul>
<li>ECMAScript：Web浏览器只是ECMAScript <strong>宿主环境之一</strong>, Node和Adobe Flash 也是ECMAScript的宿主环境。</li>
<li>DOM(Document Object Model)：文档对象模型。<ul>
<li><strong>是个API</strong>。针对XML但经过扩展用于HTMl的API。</li>
<li>由W3C(World Wide Web Consortium)万维网联盟闹的。避免Netscape和微软的两强割据。（两家闹不同的DHTML Dynamic HTML）</li>
<li>DOM级别。自己理解所谓级别是不同阶段的标准，或者说后来又加入的新功能；DOM1，DOM2，DOM3级。DOM0级呢？没有，其实对应上边的DHTML。 </li>
<li>不光是JavaScript有DOM，有其他语言也实现了DOM。SVG(Scalable Vector Graphic)可伸缩矢量图是一种语言，实现了DOM，有自己的标准。？？？</li>
</ul>
</li>
<li>BOM(Browser Object Model)：浏览器对象模型。<a id="more"></a>
</li>
</ul>
<h2 id="第2章-在HTML中使用JavaScript"><a href="#第2章-在HTML中使用JavaScript" class="headerlink" title="第2章 在HTML中使用JavaScript"></a>第2章 在HTML中使用JavaScript</h2><h3 id="1-当然是分-在页面（HTML）中嵌入JavaScript-和-包含外部JavaScript文件两种。"><a href="#1-当然是分-在页面（HTML）中嵌入JavaScript-和-包含外部JavaScript文件两种。" class="headerlink" title="1. 当然是分 在页面（HTML）中嵌入JavaScript 和 包含外部JavaScript文件两种。"></a>1. 当然是分 在页面（HTML）中嵌入JavaScript 和 包含外部JavaScript文件两种。</h3><ul>
<li><p>在页面中嵌入JavaScript时，想输出或弹出“<code>&lt;/script&gt;</code>”，怎么转义呢？</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alert(<span class="string">"&lt;\/script&gt;"</span>)</div></pre></td></tr></table></figure>
<p>注意不是<code>“\&lt;/script&gt;”</code>，重点是<code>/script&gt;</code>。</p>
</li>
<li><code>&lt;script&gt;</code> 标签放在哪里？一种：<code>&lt;head&gt;</code>尾部；另一种<code>&lt;body&gt;</code>尾部。</li>
</ul>
<blockquote>
<p>在文档的<code>&lt;head&gt;</code>元素中包含所有JavaScript文件，意味着必须等到全部JavaScript代码都被下载、解析和执行完成以后，才能开始呈现页面的内容（浏览器在遇到<code>&lt;body&gt;</code>标签时才开始呈现内容）。</p>
</blockquote>
<p>  这样在加载很多JS文件是，浏览器窗口将是一片空白。</p>
<blockquote>
<p>现在Web应用程序一般都把全部JavaScript引用放在<code>&lt;body&gt;</code>元素中页面内容的后面。</p>
</blockquote>
<p>  但是，尝试本地的JS文件或者嵌入JS就不是这样的。。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">	诶哟，厉害啦。我出现了！！！！！</div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">        alert(<span class="string">"Hi"</span>);</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>  或者<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    诶哟，厉害啦。我出现了！！！！！</div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"test.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//test.js</span></div><div class="line">alert(<span class="string">"Hello"</span>);</div></pre></td></tr></table></figure>
<p>  这两种本来以为先显示“诶哟，厉害啦。我出现了！！！！！”，再alert出对话框，但都不是。。。<br>  本来还想试试<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">	    alert(<span class="string">"Hi"</span>);</div><div class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">	诶哟，厉害啦。我出现了！！！！！</div><div class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"test.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>  想的是先弹出“Hi”，再显示出“诶哟，厉害啦。我出现了！！！！！”，最后再弹出“Hello”。。。后边的<strong>defer</strong>属性也是这样的。或许因为是本地文件的原因。</p>
<h3 id="2-延迟脚本和异步脚本"><a href="#2-延迟脚本和异步脚本" class="headerlink" title="2. 延迟脚本和异步脚本"></a>2. 延迟脚本和异步脚本</h3><p>在<code>&lt;script&gt;</code>标签中加入<code>defer</code>和<code>async</code>属性。只适用于外部脚本文件。但还是和上一个问题一样，试本地的JS文件没有用。。。具体的效果之后还得再看。</p>
<h3 id="3-文档模式"><a href="#3-文档模式" class="headerlink" title="3. 文档模式"></a>3. 文档模式</h3><p>这是说HTML的。有<strong>混杂模式</strong>，<strong>标准模式</strong>，<strong>准标准模式</strong>。但到底有什么用呢？</p>
<blockquote>
<p>主要影响CSS内容的呈现。但在某些情况下也会影响到JavaScript的解释执行。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div></pre></td></tr></table></figure>
<p>对于HTML 5，这条代码就是用来开启文档类型的标准模式。。。</p>
<h3 id="4-浏览器禁用JS时"><a href="#4-浏览器禁用JS时" class="headerlink" title="4. 浏览器禁用JS时"></a>4. 浏览器禁用JS时</h3><p>浏览器中能够设置禁用JavaScript的。这种情况下，用的JS都不起作用，Web应用程序很可能一些效果或功能都没了。而可以使用<code>&lt;noscript&gt;</code>元素设置一些提醒给用户，提高用户体验。。。但是在支持JavaScript时，不会呈现<code>&lt;noscript&gt;</code>中的内容。（在<code>&lt;noscript&gt;</code>元素中一些html标签当然还能用比如<code>&lt;h1&gt;</code>、<code>&lt;p&gt;</code>；但是JS中的就不行了，比如alert..）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第1章-简介&quot;&gt;&lt;a href=&quot;#第1章-简介&quot; class=&quot;headerlink&quot; title=&quot;第1章 简介&quot;&gt;&lt;/a&gt;第1章 简介&lt;/h2&gt;&lt;h3 id=&quot;1-几个人东&quot;&gt;&lt;a href=&quot;#1-几个人东&quot; class=&quot;headerlink&quot; title=&quot;1. 几个人东&quot;&gt;&lt;/a&gt;1. 几个人东&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;布兰登 艾奇 (Brendan Eich)&lt;/li&gt;
&lt;li&gt;ECMA(European Computer Manufactures Association) 欧洲计算机制造商协会&lt;/li&gt;
&lt;li&gt;ISO/IEC(International Organization for Standardization and International Electrotechnical Commission) 国际标准化组织和国际电工委员会&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-JavaScript-ECMAScript-DOM-BOM&quot;&gt;&lt;a href=&quot;#2-JavaScript-ECMAScript-DOM-BOM&quot; class=&quot;headerlink&quot; title=&quot;2. JavaScript = ECMAScript + DOM + BOM&quot;&gt;&lt;/a&gt;2. JavaScript = ECMAScript + DOM + BOM&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;ECMAScript：Web浏览器只是ECMAScript &lt;strong&gt;宿主环境之一&lt;/strong&gt;, Node和Adobe Flash 也是ECMAScript的宿主环境。&lt;/li&gt;
&lt;li&gt;DOM(Document Object Model)：文档对象模型。&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;是个API&lt;/strong&gt;。针对XML但经过扩展用于HTMl的API。&lt;/li&gt;
&lt;li&gt;由W3C(World Wide Web Consortium)万维网联盟闹的。避免Netscape和微软的两强割据。（两家闹不同的DHTML Dynamic HTML）&lt;/li&gt;
&lt;li&gt;DOM级别。自己理解所谓级别是不同阶段的标准，或者说后来又加入的新功能；DOM1，DOM2，DOM3级。DOM0级呢？没有，其实对应上边的DHTML。 &lt;/li&gt;
&lt;li&gt;不光是JavaScript有DOM，有其他语言也实现了DOM。SVG(Scalable Vector Graphic)可伸缩矢量图是一种语言，实现了DOM，有自己的标准。？？？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BOM(Browser Object Model)：浏览器对象模型。
    
    </summary>
    
    
      <category term="JS基础" scheme="http://yoursite.com/tags/JS%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>关于hexo的一些问题</title>
    <link href="http://yoursite.com/2016/03/13/%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/03/13/关于hexo的一些问题/</id>
    <published>2016-03-13T13:24:23.000Z</published>
    <updated>2016-10-29T09:58:33.486Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-hexo的deploy问题"><a href="#1-hexo的deploy问题" class="headerlink" title="1.hexo的deploy问题"></a>1.hexo的deploy问题</h2><p>之前在修改完主题之后，deploy就有过问题。</p>
<p><strong>解决：</strong></p>
<p>查资料后说是ssh key的问题。然后按照github上的关于ssh keys的<a href="https://help.github.com/categories/ssh/" target="_blank" rel="external">help</a>重新产生了一个ssh key，问题解决。<br>但这次写完上篇笔记再deploy时，又出现了问题。但是我去<strong>C:\Users\Administrator.ssh</strong>目录查看,ssh key的几个文件都在，值和github自己账户上的ssh keys的值也完全一样。应该不是ssh key的问题了。<br><del>网上有个方法是将github上的clone url改为HTTPS，同时配置hexo的_config.yml，并将.deploy_git文件夹删除。再进行deploy，然而还不行。</del><br>最后是看见有人分享是因为Git的版本太高，降级到1.9几就好了。本来我用的是2.5的，降级到1.9.5的确解决了！！！</p>
<a id="more"></a>
<p><strong>之后还是要学一下ssh的知识</strong></p>
<h2 id="2-hexo的markdown格式"><a href="#2-hexo的markdown格式" class="headerlink" title="2.hexo的markdown格式"></a>2.hexo的markdown格式</h2><p>hexo的官网上说明</p>
<blockquote>
<p>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</p>
</blockquote>
<p>不知道这个markdown的格式和markdown本身的格式具体是什么区别。我也是刚刚学markdown写作，开始还得照着简明语法手册来编辑。我用的编辑器是作业部落Cmd Markdown。再写第一篇笔记时，在Cmd Markdown上的预览上比如标题、引用、公式都能显示出正常的状态。但是hexo后好多都不显示该有的格式。</p>
<p><strong>解决：</strong></p>
<h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>hexo上的Markdown的符号之后要有空格，比如###2.XXX 就不能正常显示，而要写成### 2.XXX才可以。（但这里并没有变成标题，是因为要写在开头才行吧）<br>而这也是hexo很多配置的文件中的格式，<strong>属性后的值要先跟一个空格</strong>。</p>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>我改了主题，而引用的效果是要自己写的，应用其实就是HTML上加了一对<em>blockquote</em>标签（具体是在article.styl中的.article-entry下的blockquote修改）。我用了<a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank" rel="external">Apollo</a>的引用的样式。（好吧，标题的hover也是，感觉和我的背景的树和hamburger比较搭……）</p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>文章中有一个无序列表，我发现不管我在 - 后空不空格，都不能显示标点。才想起来是在写主题时，在css Reset时候写了</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ol</span>,<span class="selector-tag">li</span> &#123;<span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">padding</span>:<span class="number">0</span>; <span class="attribute">list-style</span>:none;&#125;</div></pre></td></tr></table></figure>
<p>这样当然不能显示标点了。。删掉后发现在文章的标签处也有了圆点标记了。标签也是列表结构的，还是在在article.styl中.article-tag-list属性下添加  list-style: none；然后还有hamburger上的导航也是列表也有圆点标记，再找到代码添加。<strong>这样是不是还不如整体上ol,li的list-none，具体要的标记的地方再写样式。问题是list-style最基本的有什么值都不知道。。</strong></p>
<blockquote>
<p>list-style定义和用法<br>list-style 简写属性在一个声明中设置所有的列表属性。<br>该属性是一个简写属性，涵盖了所有其他列表样式属性。由于它应用到所有 display 为 list-item 的元素，所以在普通的 HTML 和 XHTML 中只能用于 li 元素，不过实际上它可以应用到任何元素，并由 list-item 元素继承。<br>可以按顺序设置如下属性：<br>list-style-type<br>list-style-position<br>list-style-image<br>可以不设置其中的某个值，比如 “list-style:circle inside;” 也是允许的。未设置的属性会使用其默认值。<br>默认值：    disc outside none</p>
</blockquote>
<p>比如有圆形的标记，方块的标记；outside和inside的区别感觉就是把列表项往后移动了；还有一些自定义的标记。</p>
<h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>文章中有些公式。还是用Cmd Markdown编辑，按照它的说明写，预览是正确的。但在hexo后，显示不出来。</p>
<p>经查阅，Cmd Markdown是用的<a href="https://zh.wikipedia.org/wiki/LaTeX" target="_blank" rel="external">LaTeX</a> 公式，LaTeX是一种格式，</p>
<blockquote>
<p>利用这种格式，即使用户没有排版和程序设计的知识也可以充分发挥由TEX所提供的强大功能，能在几天，甚至几小时内生成很多具有书籍质量的印刷品。</p>
</blockquote>
<p>尤其是对生成数学公式比较厉害。（自己理解是，这是定一些规矩，按照这种规矩书写就可以被相应的工具解析成你想要的东西。）</p>
<p>而</p>
<blockquote>
<p>Hexo並沒有內建Tex解析功能</p>
</blockquote>
<p>所以要在hexo中加入解析Tex的功能，网上大家大部分用的是<a href="https://www.mathjax.org/" target="_blank" rel="external">MathJax</a>，按照<a href="http://lukang.me/2014/mathjax-for-hexo.html" target="_blank" rel="external">这篇文章</a>成功解决。</p>
<p>但其中有比如说 $3000H\times16=30000H$，我开始是写成了$3000H*16=30000H$了，后者在Cmd Markdown的预览下看着还是公式，然而在hexo下不是。<strong>因为</strong>在LaTeX中乘号不是用 * 表示的，而是用\times 表示。在网上找到了一篇<a href="http://mohu.org/info/symbols/symbols.htm" target="_blank" rel="external">常用数学符号的 LaTeX 表示方法</a>。（星号*表示斜体的开始，还要用\来转译的。）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-hexo的deploy问题&quot;&gt;&lt;a href=&quot;#1-hexo的deploy问题&quot; class=&quot;headerlink&quot; title=&quot;1.hexo的deploy问题&quot;&gt;&lt;/a&gt;1.hexo的deploy问题&lt;/h2&gt;&lt;p&gt;之前在修改完主题之后，deploy就有过问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查资料后说是ssh key的问题。然后按照github上的关于ssh keys的&lt;a href=&quot;https://help.github.com/categories/ssh/&quot;&gt;help&lt;/a&gt;重新产生了一个ssh key，问题解决。&lt;br&gt;但这次写完上篇笔记再deploy时，又出现了问题。但是我去&lt;strong&gt;C:\Users\Administrator.ssh&lt;/strong&gt;目录查看,ssh key的几个文件都在，值和github自己账户上的ssh keys的值也完全一样。应该不是ssh key的问题了。&lt;br&gt;&lt;del&gt;网上有个方法是将github上的clone url改为HTTPS，同时配置hexo的_config.yml，并将.deploy_git文件夹删除。再进行deploy，然而还不行。&lt;/del&gt;&lt;br&gt;最后是看见有人分享是因为Git的版本太高，降级到1.9几就好了。本来我用的是2.5的，降级到1.9.5的确解决了！！！&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>计算机系统结构</title>
    <link href="http://yoursite.com/2016/03/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/"/>
    <id>http://yoursite.com/2016/03/12/计算机系统结构/</id>
    <published>2016-03-12T04:30:08.000Z</published>
    <updated>2016-10-29T09:58:33.501Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>计算机系统结构研究的是<strong>软、硬件之间的功能分配</strong>以及<strong>对传统机器级界面</strong>的确定，为机器语言、汇编语言程序设计者或编译程序设计者生成提供使其设计或生成的程序能在机器上正确运行而应看到和遵循的<strong>计算机属性</strong>。</p>
</blockquote>
<p>记录一些自己想过的知识点<br><a id="more"></a></p>
<h1 id="计算机属性"><a href="#计算机属性" class="headerlink" title="计算机属性"></a>计算机属性</h1><h3 id="1-数据类型和格式"><a href="#1-数据类型和格式" class="headerlink" title="1.数据类型和格式"></a>1.数据类型和格式</h3><p>格式 例如：<a href="https://zh.wikipedia.org/wiki/IEEE_754" target="_blank" rel="external">754标准浮点数</a></p>
<h3 id="2-最小可寻址单位"><a href="#2-最小可寻址单位" class="headerlink" title="2.最小可寻址单位"></a>2.最小可寻址单位</h3><p>若是<strong>字节Byte</strong> 假如有两个字节，需要1根地址线，0和1即可找到；<br>若是<strong>位bit</strong> 假如还是两个字节，但是每个字节有8位，一共是16位，则需要$ log_2^{16}=4 $根地址线。</p>
<blockquote>
<p>问题: （假设最小寻址单位是字节）现有<strong>16根地址线</strong>，那么寻址空间就是$ 2^{16}B=64KB $，从0000 <em>H</em>~FFFF <em>H</em>（<em>是<strong>四位</strong>的16进制</em>）。现还有一块<strong>1MB的内存</strong>,怎样设计才能使内存不浪费？即用16根地址线能找到1MB的地址空间从00000 <em>H</em>~FFFFF <em>H</em>（<em>是<strong>五位</strong>的16进制</em>）。</p>
</blockquote>
<p>$$ 1MB=1024KB=2^{10}KB=2^{10}\times1024B=2^{10}\times2^{10}B=2^{20}B $$</p>
<p>本来是需要20根地址线的。</p>
<p>解决：采用段号+段内偏移地址的方法。<br>$ 2^{20}/2^{16}=2^4 $,将1MB的内存分成$ 2^4=16 $块（16个64KB就是1MB），即是0块，1块，2块……F块（刚好是16进制）。<strong>每一块内</strong>，是64KB，用16位地址表示，所以每块的段内地址是从0000 <em>H</em>~FFFF <em>H</em>（<em> <strong>四位</strong>十六进制 </em>）。<strong>再加上</strong>前面的0段、1段、2段……F段，即第一段的地址是0 0000 <em>H</em>~0 FFFF <em>H</em>，第二段是1 0000 <em>H</em>~1FFFF <em>H</em>，第三段是2 0000 <em>H</em>~2 FFFF <em>H</em>，最后一段是F 0000 <em>H</em>~ F FFFF <em>H</em>，（<em> <strong>五位</strong>的16进制</em>）但这样，<strong>每块的首地址</strong>都是以0结尾，所以恰巧<strong>段号</strong>就可以<strong>把最后一位省略</strong>。实际寻址时，采用段号+段内偏移地址的方法来寻址。</p>
<p>$ 实际地址=DS\times16+段内地址 $</p>
<p>DS中存的是<strong>段号</strong>，比如第一段是0000 <em>H</em>，第二段是1000 <em>H</em>，第三段是2000<em>H</em>，最后一段是F000 <em>H</em>；乘以16表示16进制的数<strong>左移一位再补零</strong>。</p>
<p>比如：有一个地址，段号是3，段内地址是152E <em>H</em>，它的实际内存址就是$ 3000H\times16=30000H $,再加上152E <em>H</em>，为3152E <em>H</em>。（<em>一个<strong>五位</strong>的十六进制</em>）</p>
<h3 id="3-寻址种类"><a href="#3-寻址种类" class="headerlink" title="3.寻址种类"></a>3.寻址种类</h3><ul>
<li>ADD AX, 3  寄存器寻址+立即寻址</li>
<li>ADD AX, [BX]  BX中存放数据的地址</li>
<li>ADD AX, BX+x  基址、变址寻址</li>
<li>等等</li>
</ul>
<h3 id="4-内存的容量和最大可编址空间不同"><a href="#4-内存的容量和最大可编址空间不同" class="headerlink" title="4.内存的容量和最大可编址空间不同"></a>4.内存的容量和最大可编址空间不同</h3><p>例如： 现有32位的CPU（32根地址线更为准确？），最大可编址空间就是$ 2^{32}=2^2\times2^{10}\times2^{10}\times2^{10}=4GB $ （最小可寻址单位为字节B。B、K、M、G)。<br>但现在我只有一块2GB的内存。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;计算机系统结构研究的是&lt;strong&gt;软、硬件之间的功能分配&lt;/strong&gt;以及&lt;strong&gt;对传统机器级界面&lt;/strong&gt;的确定，为机器语言、汇编语言程序设计者或编译程序设计者生成提供使其设计或生成的程序能在机器上正确运行而应看到和遵循的&lt;strong&gt;计算机属性&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;记录一些自己想过的知识点&lt;br&gt;
    
    </summary>
    
    
      <category term="系统结构" scheme="http://yoursite.com/tags/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>換系統測試</title>
    <link href="http://yoursite.com/2016/02/23/%E6%8F%9B%E7%B3%BB%E7%B5%B1%E6%B8%AC%E8%A9%A6/"/>
    <id>http://yoursite.com/2016/02/23/換系統測試/</id>
    <published>2016-02-23T05:54:29.000Z</published>
    <updated>2016-10-29T09:58:33.495Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>怎么了</title>
    <link href="http://yoursite.com/2016/01/08/%E6%80%8E%E4%B9%88%E4%BA%86/"/>
    <id>http://yoursite.com/2016/01/08/怎么了/</id>
    <published>2016-01-08T11:21:53.000Z</published>
    <updated>2016-10-29T09:58:33.491Z</updated>
    
    <content type="html"><![CDATA[<p>真的是搞不懂 实在是搞不懂 完全搞不懂<br><a id="more"></a><br>哈哈哈</p>
<p>#哈哈哈</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;真的是搞不懂 实在是搞不懂 完全搞不懂&lt;br&gt;
    
    </summary>
    
      <category term="吐槽" scheme="http://yoursite.com/categories/%E5%90%90%E6%A7%BD/"/>
    
    
      <category term="问题" scheme="http://yoursite.com/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Eiyaya</title>
    <link href="http://yoursite.com/2016/01/04/eiyaya/"/>
    <id>http://yoursite.com/2016/01/04/eiyaya/</id>
    <published>2016-01-04T02:20:00.000Z</published>
    <updated>2016-10-29T09:58:33.480Z</updated>
    
    <content type="html"><![CDATA[<p>#什么<br>啊范德萨发达</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#什么&lt;br&gt;啊范德萨发达&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Test</title>
    <link href="http://yoursite.com/2015/12/22/Test/"/>
    <id>http://yoursite.com/2015/12/22/Test/</id>
    <published>2015-12-22T11:39:59.000Z</published>
    <updated>2016-10-29T09:58:33.475Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Test1"><a href="#Test1" class="headerlink" title="Test1"></a>Test1</h1><h2 id="Test2"><a href="#Test2" class="headerlink" title="Test2"></a>Test2</h2><p>Test Test</p>
<p>Test</p>
<p><em>Test</em></p>
<p><strong>Test</strong><br><a id="more"></a></p>
<ul>
<li>Test test 测试</li>
</ul>
<blockquote>
<p>Test test 测试</p>
<p>数据结构</p>
<blockquote>
<p>树</p>
<blockquote>
<p>二叉树</p>
<blockquote>
<p>平衡二叉树</p>
<blockquote>
<p>满二叉树</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<hr>
<ul>
<li>Test</li>
<li>Test</li>
<li>Test</li>
</ul>
<ol>
<li>Test</li>
<li>Test</li>
<li>Test</li>
</ol>
<ul>
<li>Test<ul>
<li>Test</li>
<li>Test</li>
</ul>
</li>
<li>Test</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String args[])</span> </span>&#123;</div><div class="line">	System.out.println(<span class="string">"Test"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://github.com/htxf/htxf.github.io.git" target="_blank" rel="external">o-o</a><br><!--more--></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Test1&quot;&gt;&lt;a href=&quot;#Test1&quot; class=&quot;headerlink&quot; title=&quot;Test1&quot;&gt;&lt;/a&gt;Test1&lt;/h1&gt;&lt;h2 id=&quot;Test2&quot;&gt;&lt;a href=&quot;#Test2&quot; class=&quot;headerlink&quot; title=&quot;Test2&quot;&gt;&lt;/a&gt;Test2&lt;/h2&gt;&lt;p&gt;Test Test&lt;/p&gt;
&lt;p&gt;Test&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Test&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Test&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂" scheme="http://yoursite.com/categories/%E6%9D%82/"/>
    
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="haha" scheme="http://yoursite.com/tags/haha/"/>
    
  </entry>
  
</feed>
